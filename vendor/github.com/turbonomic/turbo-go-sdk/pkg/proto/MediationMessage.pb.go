// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MediationMessage.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Messages, sent from client to server
type MediationClientMessage struct {
	// Types that are valid to be assigned to MediationClientMessage:
	//	*MediationClientMessage_ValidationResponse
	//	*MediationClientMessage_DiscoveryResponse
	//	*MediationClientMessage_KeepAlive
	//	*MediationClientMessage_ActionProgress
	//	*MediationClientMessage_ActionResponse
	//	*MediationClientMessage_TargetUpdateResponse
	//	*MediationClientMessage_ActionErrorsResponse
	//	*MediationClientMessage_ActionStatesResponse
	//	*MediationClientMessage_ActionApprovalResponse
	MediationClientMessage isMediationClientMessage_MediationClientMessage `protobuf_oneof:"mediation_client_message"`
	// this is always required in reality. it's optional here because
	// we don't know if in the future, with embedded targets, we will
	// still use it or not
	MessageID            *int32   `protobuf:"varint,15,opt,name=messageID" json:"messageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediationClientMessage) Reset()         { *m = MediationClientMessage{} }
func (m *MediationClientMessage) String() string { return proto.CompactTextString(m) }
func (*MediationClientMessage) ProtoMessage()    {}
func (*MediationClientMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{0}
}

func (m *MediationClientMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediationClientMessage.Unmarshal(m, b)
}
func (m *MediationClientMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediationClientMessage.Marshal(b, m, deterministic)
}
func (m *MediationClientMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediationClientMessage.Merge(m, src)
}
func (m *MediationClientMessage) XXX_Size() int {
	return xxx_messageInfo_MediationClientMessage.Size(m)
}
func (m *MediationClientMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MediationClientMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MediationClientMessage proto.InternalMessageInfo

type isMediationClientMessage_MediationClientMessage interface {
	isMediationClientMessage_MediationClientMessage()
}

type MediationClientMessage_ValidationResponse struct {
	ValidationResponse *ValidationResponse `protobuf:"bytes,2,opt,name=validationResponse,oneof"`
}

type MediationClientMessage_DiscoveryResponse struct {
	DiscoveryResponse *DiscoveryResponse `protobuf:"bytes,3,opt,name=discoveryResponse,oneof"`
}

type MediationClientMessage_KeepAlive struct {
	KeepAlive *KeepAlive `protobuf:"bytes,4,opt,name=keepAlive,oneof"`
}

type MediationClientMessage_ActionProgress struct {
	ActionProgress *ActionProgress `protobuf:"bytes,5,opt,name=actionProgress,oneof"`
}

type MediationClientMessage_ActionResponse struct {
	ActionResponse *ActionResult `protobuf:"bytes,6,opt,name=actionResponse,oneof"`
}

type MediationClientMessage_TargetUpdateResponse struct {
	TargetUpdateResponse *TargetUpdateResponse `protobuf:"bytes,7,opt,name=targetUpdateResponse,oneof"`
}

type MediationClientMessage_ActionErrorsResponse struct {
	ActionErrorsResponse *ActionErrorsResponse `protobuf:"bytes,8,opt,name=actionErrorsResponse,oneof"`
}

type MediationClientMessage_ActionStatesResponse struct {
	ActionStatesResponse *GetActionStateResponse `protobuf:"bytes,9,opt,name=actionStatesResponse,oneof"`
}

type MediationClientMessage_ActionApprovalResponse struct {
	ActionApprovalResponse *ActionApprovalResponse `protobuf:"bytes,10,opt,name=actionApprovalResponse,oneof"`
}

func (*MediationClientMessage_ValidationResponse) isMediationClientMessage_MediationClientMessage() {}

func (*MediationClientMessage_DiscoveryResponse) isMediationClientMessage_MediationClientMessage() {}

func (*MediationClientMessage_KeepAlive) isMediationClientMessage_MediationClientMessage() {}

func (*MediationClientMessage_ActionProgress) isMediationClientMessage_MediationClientMessage() {}

func (*MediationClientMessage_ActionResponse) isMediationClientMessage_MediationClientMessage() {}

func (*MediationClientMessage_TargetUpdateResponse) isMediationClientMessage_MediationClientMessage() {
}

func (*MediationClientMessage_ActionErrorsResponse) isMediationClientMessage_MediationClientMessage() {
}

func (*MediationClientMessage_ActionStatesResponse) isMediationClientMessage_MediationClientMessage() {
}

func (*MediationClientMessage_ActionApprovalResponse) isMediationClientMessage_MediationClientMessage() {
}

func (m *MediationClientMessage) GetMediationClientMessage() isMediationClientMessage_MediationClientMessage {
	if m != nil {
		return m.MediationClientMessage
	}
	return nil
}

func (m *MediationClientMessage) GetValidationResponse() *ValidationResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ValidationResponse); ok {
		return x.ValidationResponse
	}
	return nil
}

func (m *MediationClientMessage) GetDiscoveryResponse() *DiscoveryResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_DiscoveryResponse); ok {
		return x.DiscoveryResponse
	}
	return nil
}

func (m *MediationClientMessage) GetKeepAlive() *KeepAlive {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_KeepAlive); ok {
		return x.KeepAlive
	}
	return nil
}

func (m *MediationClientMessage) GetActionProgress() *ActionProgress {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ActionProgress); ok {
		return x.ActionProgress
	}
	return nil
}

func (m *MediationClientMessage) GetActionResponse() *ActionResult {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ActionResponse); ok {
		return x.ActionResponse
	}
	return nil
}

func (m *MediationClientMessage) GetTargetUpdateResponse() *TargetUpdateResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_TargetUpdateResponse); ok {
		return x.TargetUpdateResponse
	}
	return nil
}

func (m *MediationClientMessage) GetActionErrorsResponse() *ActionErrorsResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ActionErrorsResponse); ok {
		return x.ActionErrorsResponse
	}
	return nil
}

func (m *MediationClientMessage) GetActionStatesResponse() *GetActionStateResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ActionStatesResponse); ok {
		return x.ActionStatesResponse
	}
	return nil
}

func (m *MediationClientMessage) GetActionApprovalResponse() *ActionApprovalResponse {
	if x, ok := m.GetMediationClientMessage().(*MediationClientMessage_ActionApprovalResponse); ok {
		return x.ActionApprovalResponse
	}
	return nil
}

func (m *MediationClientMessage) GetMessageID() int32 {
	if m != nil && m.MessageID != nil {
		return *m.MessageID
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MediationClientMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MediationClientMessage_ValidationResponse)(nil),
		(*MediationClientMessage_DiscoveryResponse)(nil),
		(*MediationClientMessage_KeepAlive)(nil),
		(*MediationClientMessage_ActionProgress)(nil),
		(*MediationClientMessage_ActionResponse)(nil),
		(*MediationClientMessage_TargetUpdateResponse)(nil),
		(*MediationClientMessage_ActionErrorsResponse)(nil),
		(*MediationClientMessage_ActionStatesResponse)(nil),
		(*MediationClientMessage_ActionApprovalResponse)(nil),
	}
}

// Messages, sent from server to client
type MediationServerMessage struct {
	// Types that are valid to be assigned to MediationServerMessage:
	//	*MediationServerMessage_ValidationRequest
	//	*MediationServerMessage_DiscoveryRequest
	//	*MediationServerMessage_ActionRequest
	//	*MediationServerMessage_InterruptOperation
	//	*MediationServerMessage_Properties
	//	*MediationServerMessage_TargetUpdateRequest
	//	*MediationServerMessage_ActionApproval
	//	*MediationServerMessage_ActionUpdateState
	//	*MediationServerMessage_GetActionState
	//	*MediationServerMessage_ActionAudit
	MediationServerMessage isMediationServerMessage_MediationServerMessage `protobuf_oneof:"mediation_server_message"`
	// this is always required in reality. it's optional here because
	// we don't know if in the future, with embedded targets, we will
	// still use it or not
	MessageID            *int32   `protobuf:"varint,15,opt,name=messageID" json:"messageID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MediationServerMessage) Reset()         { *m = MediationServerMessage{} }
func (m *MediationServerMessage) String() string { return proto.CompactTextString(m) }
func (*MediationServerMessage) ProtoMessage()    {}
func (*MediationServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{1}
}

func (m *MediationServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediationServerMessage.Unmarshal(m, b)
}
func (m *MediationServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediationServerMessage.Marshal(b, m, deterministic)
}
func (m *MediationServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediationServerMessage.Merge(m, src)
}
func (m *MediationServerMessage) XXX_Size() int {
	return xxx_messageInfo_MediationServerMessage.Size(m)
}
func (m *MediationServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_MediationServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_MediationServerMessage proto.InternalMessageInfo

type isMediationServerMessage_MediationServerMessage interface {
	isMediationServerMessage_MediationServerMessage()
}

type MediationServerMessage_ValidationRequest struct {
	ValidationRequest *ValidationRequest `protobuf:"bytes,2,opt,name=validationRequest,oneof"`
}

type MediationServerMessage_DiscoveryRequest struct {
	DiscoveryRequest *DiscoveryRequest `protobuf:"bytes,3,opt,name=discoveryRequest,oneof"`
}

type MediationServerMessage_ActionRequest struct {
	ActionRequest *ActionRequest `protobuf:"bytes,4,opt,name=actionRequest,oneof"`
}

type MediationServerMessage_InterruptOperation struct {
	InterruptOperation int32 `protobuf:"varint,5,opt,name=interruptOperation,oneof"`
}

type MediationServerMessage_Properties struct {
	Properties *SetProperties `protobuf:"bytes,6,opt,name=properties,oneof"`
}

type MediationServerMessage_TargetUpdateRequest struct {
	TargetUpdateRequest *TargetUpdateRequest `protobuf:"bytes,7,opt,name=targetUpdateRequest,oneof"`
}

type MediationServerMessage_ActionApproval struct {
	ActionApproval *ActionApprovalRequest `protobuf:"bytes,8,opt,name=actionApproval,oneof"`
}

type MediationServerMessage_ActionUpdateState struct {
	ActionUpdateState *ActionUpdateStateRequest `protobuf:"bytes,9,opt,name=actionUpdateState,oneof"`
}

type MediationServerMessage_GetActionState struct {
	GetActionState *GetActionStateRequest `protobuf:"bytes,10,opt,name=getActionState,oneof"`
}

type MediationServerMessage_ActionAudit struct {
	ActionAudit *ActionAuditRequest `protobuf:"bytes,11,opt,name=actionAudit,oneof"`
}

func (*MediationServerMessage_ValidationRequest) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_DiscoveryRequest) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_ActionRequest) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_InterruptOperation) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_Properties) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_TargetUpdateRequest) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_ActionApproval) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_ActionUpdateState) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_GetActionState) isMediationServerMessage_MediationServerMessage() {}

func (*MediationServerMessage_ActionAudit) isMediationServerMessage_MediationServerMessage() {}

func (m *MediationServerMessage) GetMediationServerMessage() isMediationServerMessage_MediationServerMessage {
	if m != nil {
		return m.MediationServerMessage
	}
	return nil
}

func (m *MediationServerMessage) GetValidationRequest() *ValidationRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_ValidationRequest); ok {
		return x.ValidationRequest
	}
	return nil
}

func (m *MediationServerMessage) GetDiscoveryRequest() *DiscoveryRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_DiscoveryRequest); ok {
		return x.DiscoveryRequest
	}
	return nil
}

func (m *MediationServerMessage) GetActionRequest() *ActionRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_ActionRequest); ok {
		return x.ActionRequest
	}
	return nil
}

func (m *MediationServerMessage) GetInterruptOperation() int32 {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_InterruptOperation); ok {
		return x.InterruptOperation
	}
	return 0
}

func (m *MediationServerMessage) GetProperties() *SetProperties {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_Properties); ok {
		return x.Properties
	}
	return nil
}

func (m *MediationServerMessage) GetTargetUpdateRequest() *TargetUpdateRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_TargetUpdateRequest); ok {
		return x.TargetUpdateRequest
	}
	return nil
}

func (m *MediationServerMessage) GetActionApproval() *ActionApprovalRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_ActionApproval); ok {
		return x.ActionApproval
	}
	return nil
}

func (m *MediationServerMessage) GetActionUpdateState() *ActionUpdateStateRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_ActionUpdateState); ok {
		return x.ActionUpdateState
	}
	return nil
}

func (m *MediationServerMessage) GetGetActionState() *GetActionStateRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_GetActionState); ok {
		return x.GetActionState
	}
	return nil
}

func (m *MediationServerMessage) GetActionAudit() *ActionAuditRequest {
	if x, ok := m.GetMediationServerMessage().(*MediationServerMessage_ActionAudit); ok {
		return x.ActionAudit
	}
	return nil
}

func (m *MediationServerMessage) GetMessageID() int32 {
	if m != nil && m.MessageID != nil {
		return *m.MessageID
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MediationServerMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MediationServerMessage_ValidationRequest)(nil),
		(*MediationServerMessage_DiscoveryRequest)(nil),
		(*MediationServerMessage_ActionRequest)(nil),
		(*MediationServerMessage_InterruptOperation)(nil),
		(*MediationServerMessage_Properties)(nil),
		(*MediationServerMessage_TargetUpdateRequest)(nil),
		(*MediationServerMessage_ActionApproval)(nil),
		(*MediationServerMessage_ActionUpdateState)(nil),
		(*MediationServerMessage_GetActionState)(nil),
		(*MediationServerMessage_ActionAudit)(nil),
	}
}

type RequestTargetId struct {
	// Probe type
	ProbeType *string `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	// Account values provide data to allow the probe to allow it to connect
	// to the probe
	AccountValue         []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RequestTargetId) Reset()         { *m = RequestTargetId{} }
func (m *RequestTargetId) String() string { return proto.CompactTextString(m) }
func (*RequestTargetId) ProtoMessage()    {}
func (*RequestTargetId) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{2}
}

func (m *RequestTargetId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTargetId.Unmarshal(m, b)
}
func (m *RequestTargetId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTargetId.Marshal(b, m, deterministic)
}
func (m *RequestTargetId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTargetId.Merge(m, src)
}
func (m *RequestTargetId) XXX_Size() int {
	return xxx_messageInfo_RequestTargetId.Size(m)
}
func (m *RequestTargetId) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTargetId.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTargetId proto.InternalMessageInfo

func (m *RequestTargetId) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *RequestTargetId) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

// Request for action to be performed in probe
type ActionRequest struct {
	ProbeType *string `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	// Account values provide data to allow the probe to allow it to connect
	// to the probe
	AccountValue []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	// An action execution DTO contains one or more action items
	ActionExecutionDTO *ActionExecutionDTO `protobuf:"bytes,3,req,name=actionExecutionDTO" json:"actionExecutionDTO,omitempty"`
	// For Cross Destination actions (from one target to another) 2 sets of account
	// values are needed
	SecondaryAccountValue []*AccountValue `protobuf:"bytes,4,rep,name=secondaryAccountValue" json:"secondaryAccountValue,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}        `json:"-"`
	XXX_unrecognized      []byte          `json:"-"`
	XXX_sizecache         int32           `json:"-"`
}

func (m *ActionRequest) Reset()         { *m = ActionRequest{} }
func (m *ActionRequest) String() string { return proto.CompactTextString(m) }
func (*ActionRequest) ProtoMessage()    {}
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{3}
}

func (m *ActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRequest.Unmarshal(m, b)
}
func (m *ActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRequest.Marshal(b, m, deterministic)
}
func (m *ActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRequest.Merge(m, src)
}
func (m *ActionRequest) XXX_Size() int {
	return xxx_messageInfo_ActionRequest.Size(m)
}
func (m *ActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRequest proto.InternalMessageInfo

func (m *ActionRequest) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *ActionRequest) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

func (m *ActionRequest) GetActionExecutionDTO() *ActionExecutionDTO {
	if m != nil {
		return m.ActionExecutionDTO
	}
	return nil
}

func (m *ActionRequest) GetSecondaryAccountValue() []*AccountValue {
	if m != nil {
		return m.SecondaryAccountValue
	}
	return nil
}

// Result of the action execution. It is translated only once
// after action execution is either completed or failed
type ActionResult struct {
	Response             *ActionResponse `protobuf:"bytes,1,req,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ActionResult) Reset()         { *m = ActionResult{} }
func (m *ActionResult) String() string { return proto.CompactTextString(m) }
func (*ActionResult) ProtoMessage()    {}
func (*ActionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{4}
}

func (m *ActionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResult.Unmarshal(m, b)
}
func (m *ActionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResult.Marshal(b, m, deterministic)
}
func (m *ActionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResult.Merge(m, src)
}
func (m *ActionResult) XXX_Size() int {
	return xxx_messageInfo_ActionResult.Size(m)
}
func (m *ActionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResult.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResult proto.InternalMessageInfo

func (m *ActionResult) GetResponse() *ActionResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// Progress of the currently executed action. Can be send multiple times
// for each action
type ActionProgress struct {
	Response             *ActionResponse `protobuf:"bytes,1,req,name=response" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ActionProgress) Reset()         { *m = ActionProgress{} }
func (m *ActionProgress) String() string { return proto.CompactTextString(m) }
func (*ActionProgress) ProtoMessage()    {}
func (*ActionProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{5}
}

func (m *ActionProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionProgress.Unmarshal(m, b)
}
func (m *ActionProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionProgress.Marshal(b, m, deterministic)
}
func (m *ActionProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionProgress.Merge(m, src)
}
func (m *ActionProgress) XXX_Size() int {
	return xxx_messageInfo_ActionProgress.Size(m)
}
func (m *ActionProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionProgress.DiscardUnknown(m)
}

var xxx_messageInfo_ActionProgress proto.InternalMessageInfo

func (m *ActionProgress) GetResponse() *ActionResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

// This class holds response information about executing action. It contains: response: the
// ActionResponseState code representing the state of executing action responseDescription: the
// description message notifying detailed information about current status of executing action
type ActionResponse struct {
	// current action state
	ActionResponseState *ActionResponseState `protobuf:"varint,1,req,name=actionResponseState,enum=common_dto.ActionResponseState" json:"actionResponseState,omitempty"`
	// current action progress (0..100)
	Progress *int32 `protobuf:"varint,2,req,name=progress" json:"progress,omitempty"`
	// action state description, for example ("Moving VM...")
	ResponseDescription *string `protobuf:"bytes,3,req,name=responseDescription" json:"responseDescription,omitempty"`
	// optional actionOid, if any specific action is associated with this message
	ActionOid            *int64   `protobuf:"varint,4,opt,name=actionOid" json:"actionOid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionResponse) Reset()         { *m = ActionResponse{} }
func (m *ActionResponse) String() string { return proto.CompactTextString(m) }
func (*ActionResponse) ProtoMessage()    {}
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{6}
}

func (m *ActionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionResponse.Unmarshal(m, b)
}
func (m *ActionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionResponse.Marshal(b, m, deterministic)
}
func (m *ActionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionResponse.Merge(m, src)
}
func (m *ActionResponse) XXX_Size() int {
	return xxx_messageInfo_ActionResponse.Size(m)
}
func (m *ActionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionResponse proto.InternalMessageInfo

func (m *ActionResponse) GetActionResponseState() ActionResponseState {
	if m != nil && m.ActionResponseState != nil {
		return *m.ActionResponseState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionResponse) GetProgress() int32 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *ActionResponse) GetResponseDescription() string {
	if m != nil && m.ResponseDescription != nil {
		return *m.ResponseDescription
	}
	return ""
}

func (m *ActionResponse) GetActionOid() int64 {
	if m != nil && m.ActionOid != nil {
		return *m.ActionOid
	}
	return 0
}

// TargetUpdateResponse is the response of a TargetUpdateRequest message.
// It contains the response, and any errors encountered during the target update attempt.
type TargetUpdateResponse struct {
	// Errors, discovered during external probe operation
	ErrorDTO             []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TargetUpdateResponse) Reset()         { *m = TargetUpdateResponse{} }
func (m *TargetUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*TargetUpdateResponse) ProtoMessage()    {}
func (*TargetUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{7}
}

func (m *TargetUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetUpdateResponse.Unmarshal(m, b)
}
func (m *TargetUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetUpdateResponse.Marshal(b, m, deterministic)
}
func (m *TargetUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetUpdateResponse.Merge(m, src)
}
func (m *TargetUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_TargetUpdateResponse.Size(m)
}
func (m *TargetUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TargetUpdateResponse proto.InternalMessageInfo

func (m *TargetUpdateResponse) GetErrorDTO() []*ErrorDTO {
	if m != nil {
		return m.ErrorDTO
	}
	return nil
}

// Response for action approval, action audit and updateActionItemStates requests.
type ActionErrorsResponse struct {
	// Set of errors, if any
	Errors               []*ActionErrorDTO `protobuf:"bytes,1,rep,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionErrorsResponse) Reset()         { *m = ActionErrorsResponse{} }
func (m *ActionErrorsResponse) String() string { return proto.CompactTextString(m) }
func (*ActionErrorsResponse) ProtoMessage()    {}
func (*ActionErrorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{8}
}

func (m *ActionErrorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionErrorsResponse.Unmarshal(m, b)
}
func (m *ActionErrorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionErrorsResponse.Marshal(b, m, deterministic)
}
func (m *ActionErrorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionErrorsResponse.Merge(m, src)
}
func (m *ActionErrorsResponse) XXX_Size() int {
	return xxx_messageInfo_ActionErrorsResponse.Size(m)
}
func (m *ActionErrorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionErrorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ActionErrorsResponse proto.InternalMessageInfo

func (m *ActionErrorsResponse) GetErrors() []*ActionErrorDTO {
	if m != nil {
		return m.Errors
	}
	return nil
}

// Response for getActionStates request
type GetActionStateResponse struct {
	// Action states from the backend
	ActionState map[int64]ActionResponseState `protobuf:"bytes,1,rep,name=actionState" json:"actionState,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value,enum=common_dto.ActionResponseState"`
	// Error messages. Must have records for every action that failed processing
	Errors               []*ActionErrorDTO `protobuf:"bytes,2,rep,name=errors" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetActionStateResponse) Reset()         { *m = GetActionStateResponse{} }
func (m *GetActionStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetActionStateResponse) ProtoMessage()    {}
func (*GetActionStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{9}
}

func (m *GetActionStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActionStateResponse.Unmarshal(m, b)
}
func (m *GetActionStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActionStateResponse.Marshal(b, m, deterministic)
}
func (m *GetActionStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActionStateResponse.Merge(m, src)
}
func (m *GetActionStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetActionStateResponse.Size(m)
}
func (m *GetActionStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActionStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActionStateResponse proto.InternalMessageInfo

func (m *GetActionStateResponse) GetActionState() map[int64]ActionResponseState {
	if m != nil {
		return m.ActionState
	}
	return nil
}

func (m *GetActionStateResponse) GetErrors() []*ActionErrorDTO {
	if m != nil {
		return m.Errors
	}
	return nil
}

// ContainerInfo message to the Operations Manager server.
// This message passes probe descriptions to the server.
type ContainerInfo struct {
	// Set of ProbeInfo objects, each one will carry information about one of the probe
	// that the container has loaded internally.
	Probes               []*ProbeInfo `protobuf:"bytes,1,rep,name=probes" json:"probes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContainerInfo) Reset()         { *m = ContainerInfo{} }
func (m *ContainerInfo) String() string { return proto.CompactTextString(m) }
func (*ContainerInfo) ProtoMessage()    {}
func (*ContainerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{10}
}

func (m *ContainerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerInfo.Unmarshal(m, b)
}
func (m *ContainerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerInfo.Marshal(b, m, deterministic)
}
func (m *ContainerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerInfo.Merge(m, src)
}
func (m *ContainerInfo) XXX_Size() int {
	return xxx_messageInfo_ContainerInfo.Size(m)
}
func (m *ContainerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerInfo proto.InternalMessageInfo

func (m *ContainerInfo) GetProbes() []*ProbeInfo {
	if m != nil {
		return m.Probes
	}
	return nil
}

type KeepAlive struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeepAlive) Reset()         { *m = KeepAlive{} }
func (m *KeepAlive) String() string { return proto.CompactTextString(m) }
func (*KeepAlive) ProtoMessage()    {}
func (*KeepAlive) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{11}
}

func (m *KeepAlive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeepAlive.Unmarshal(m, b)
}
func (m *KeepAlive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeepAlive.Marshal(b, m, deterministic)
}
func (m *KeepAlive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeepAlive.Merge(m, src)
}
func (m *KeepAlive) XXX_Size() int {
	return xxx_messageInfo_KeepAlive.Size(m)
}
func (m *KeepAlive) XXX_DiscardUnknown() {
	xxx_messageInfo_KeepAlive.DiscardUnknown(m)
}

var xxx_messageInfo_KeepAlive proto.InternalMessageInfo

type Ack struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ack) Reset()         { *m = Ack{} }
func (m *Ack) String() string { return proto.CompactTextString(m) }
func (*Ack) ProtoMessage()    {}
func (*Ack) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{12}
}

func (m *Ack) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ack.Unmarshal(m, b)
}
func (m *Ack) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ack.Marshal(b, m, deterministic)
}
func (m *Ack) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ack.Merge(m, src)
}
func (m *Ack) XXX_Size() int {
	return xxx_messageInfo_Ack.Size(m)
}
func (m *Ack) XXX_DiscardUnknown() {
	xxx_messageInfo_Ack.DiscardUnknown(m)
}

var xxx_messageInfo_Ack proto.InternalMessageInfo

// This message is sent from the server to the client when the client is successfully registered
// and contains important initialization information.  For the time being, this message ensures
// that, if probe properties are available at the server site, then they can be transferred to the
// client site at least once.
// Later, this message may contain more initialization information that a client must obtain at
// least once.
type InitializationContent struct {
	ProbeProperties      *SetProperties `protobuf:"bytes,1,req,name=probeProperties" json:"probeProperties,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *InitializationContent) Reset()         { *m = InitializationContent{} }
func (m *InitializationContent) String() string { return proto.CompactTextString(m) }
func (*InitializationContent) ProtoMessage()    {}
func (*InitializationContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{13}
}

func (m *InitializationContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializationContent.Unmarshal(m, b)
}
func (m *InitializationContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializationContent.Marshal(b, m, deterministic)
}
func (m *InitializationContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializationContent.Merge(m, src)
}
func (m *InitializationContent) XXX_Size() int {
	return xxx_messageInfo_InitializationContent.Size(m)
}
func (m *InitializationContent) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializationContent.DiscardUnknown(m)
}

var xxx_messageInfo_InitializationContent proto.InternalMessageInfo

func (m *InitializationContent) GetProbeProperties() *SetProperties {
	if m != nil {
		return m.ProbeProperties
	}
	return nil
}

type ValidationRequest struct {
	ProbeType            *string         `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	AccountValue         []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ValidationRequest) Reset()         { *m = ValidationRequest{} }
func (m *ValidationRequest) String() string { return proto.CompactTextString(m) }
func (*ValidationRequest) ProtoMessage()    {}
func (*ValidationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{14}
}

func (m *ValidationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationRequest.Unmarshal(m, b)
}
func (m *ValidationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationRequest.Marshal(b, m, deterministic)
}
func (m *ValidationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationRequest.Merge(m, src)
}
func (m *ValidationRequest) XXX_Size() int {
	return xxx_messageInfo_ValidationRequest.Size(m)
}
func (m *ValidationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationRequest proto.InternalMessageInfo

func (m *ValidationRequest) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *ValidationRequest) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

type DiscoveryRequest struct {
	ProbeType    *string         `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	AccountValue []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	// the type of discovery defined by this request
	DiscoveryType *DiscoveryType `protobuf:"varint,3,req,name=discoveryType,enum=common_dto.DiscoveryType" json:"discoveryType,omitempty"`
	// Discovery context contains data that was sent by the probe to the server in the previous
	// discovery response.
	DiscoveryContext     *DiscoveryContextDTO `protobuf:"bytes,4,opt,name=discoveryContext" json:"discoveryContext,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DiscoveryRequest) Reset()         { *m = DiscoveryRequest{} }
func (m *DiscoveryRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoveryRequest) ProtoMessage()    {}
func (*DiscoveryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{15}
}

func (m *DiscoveryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoveryRequest.Unmarshal(m, b)
}
func (m *DiscoveryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoveryRequest.Marshal(b, m, deterministic)
}
func (m *DiscoveryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoveryRequest.Merge(m, src)
}
func (m *DiscoveryRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoveryRequest.Size(m)
}
func (m *DiscoveryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoveryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoveryRequest proto.InternalMessageInfo

func (m *DiscoveryRequest) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *DiscoveryRequest) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

func (m *DiscoveryRequest) GetDiscoveryType() DiscoveryType {
	if m != nil && m.DiscoveryType != nil {
		return *m.DiscoveryType
	}
	return DiscoveryType_FULL
}

func (m *DiscoveryRequest) GetDiscoveryContext() *DiscoveryContextDTO {
	if m != nil {
		return m.DiscoveryContext
	}
	return nil
}

// This message is sent from server to the client that notify to update or delete
// remote probe instance.
type TargetUpdateRequest struct {
	ProbeType    *string         `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	AccountValue []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	// the type of update defined by this request
	UpdateType           *UpdateType `protobuf:"varint,3,req,name=updateType,enum=common_dto.UpdateType" json:"updateType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TargetUpdateRequest) Reset()         { *m = TargetUpdateRequest{} }
func (m *TargetUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*TargetUpdateRequest) ProtoMessage()    {}
func (*TargetUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{16}
}

func (m *TargetUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TargetUpdateRequest.Unmarshal(m, b)
}
func (m *TargetUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TargetUpdateRequest.Marshal(b, m, deterministic)
}
func (m *TargetUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TargetUpdateRequest.Merge(m, src)
}
func (m *TargetUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_TargetUpdateRequest.Size(m)
}
func (m *TargetUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TargetUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TargetUpdateRequest proto.InternalMessageInfo

func (m *TargetUpdateRequest) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *TargetUpdateRequest) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

func (m *TargetUpdateRequest) GetUpdateType() UpdateType {
	if m != nil && m.UpdateType != nil {
		return *m.UpdateType
	}
	return UpdateType_UPDATED
}

// Request to approve actions in the action approval backend.
type ActionApprovalRequest struct {
	// Target to execute request on
	Target *RequestTargetId `protobuf:"bytes,1,req,name=target" json:"target,omitempty"`
	// Actinos to request approval for
	Action               []*ActionExecutionDTO `protobuf:"bytes,2,rep,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ActionApprovalRequest) Reset()         { *m = ActionApprovalRequest{} }
func (m *ActionApprovalRequest) String() string { return proto.CompactTextString(m) }
func (*ActionApprovalRequest) ProtoMessage()    {}
func (*ActionApprovalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{17}
}

func (m *ActionApprovalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionApprovalRequest.Unmarshal(m, b)
}
func (m *ActionApprovalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionApprovalRequest.Marshal(b, m, deterministic)
}
func (m *ActionApprovalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionApprovalRequest.Merge(m, src)
}
func (m *ActionApprovalRequest) XXX_Size() int {
	return xxx_messageInfo_ActionApprovalRequest.Size(m)
}
func (m *ActionApprovalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionApprovalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionApprovalRequest proto.InternalMessageInfo

func (m *ActionApprovalRequest) GetTarget() *RequestTargetId {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ActionApprovalRequest) GetAction() []*ActionExecutionDTO {
	if m != nil {
		return m.Action
	}
	return nil
}

// Request sent to action approval backend to update action states at the backend
type ActionUpdateStateRequest struct {
	// Target to execute request on
	Target *RequestTargetId `protobuf:"bytes,1,req,name=target" json:"target,omitempty"`
	// Action states to update
	ActionState          []*ActionResponse `protobuf:"bytes,2,rep,name=actionState" json:"actionState,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionUpdateStateRequest) Reset()         { *m = ActionUpdateStateRequest{} }
func (m *ActionUpdateStateRequest) String() string { return proto.CompactTextString(m) }
func (*ActionUpdateStateRequest) ProtoMessage()    {}
func (*ActionUpdateStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{18}
}

func (m *ActionUpdateStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionUpdateStateRequest.Unmarshal(m, b)
}
func (m *ActionUpdateStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionUpdateStateRequest.Marshal(b, m, deterministic)
}
func (m *ActionUpdateStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionUpdateStateRequest.Merge(m, src)
}
func (m *ActionUpdateStateRequest) XXX_Size() int {
	return xxx_messageInfo_ActionUpdateStateRequest.Size(m)
}
func (m *ActionUpdateStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionUpdateStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionUpdateStateRequest proto.InternalMessageInfo

func (m *ActionUpdateStateRequest) GetTarget() *RequestTargetId {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ActionUpdateStateRequest) GetActionState() []*ActionResponse {
	if m != nil {
		return m.ActionState
	}
	return nil
}

// Response message for requesting action states
type GetActionStateRequest struct {
	// Target to execute request on
	Target *RequestTargetId `protobuf:"bytes,1,req,name=target" json:"target,omitempty"`
	// Collection of action ids to request states of
	ActionOid            []int64  `protobuf:"varint,2,rep,name=actionOid" json:"actionOid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetActionStateRequest) Reset()         { *m = GetActionStateRequest{} }
func (m *GetActionStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetActionStateRequest) ProtoMessage()    {}
func (*GetActionStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{19}
}

func (m *GetActionStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActionStateRequest.Unmarshal(m, b)
}
func (m *GetActionStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActionStateRequest.Marshal(b, m, deterministic)
}
func (m *GetActionStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActionStateRequest.Merge(m, src)
}
func (m *GetActionStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetActionStateRequest.Size(m)
}
func (m *GetActionStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActionStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetActionStateRequest proto.InternalMessageInfo

func (m *GetActionStateRequest) GetTarget() *RequestTargetId {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *GetActionStateRequest) GetActionOid() []int64 {
	if m != nil {
		return m.ActionOid
	}
	return nil
}

// Request to approve actions in the action approval backend.
type ActionAuditRequest struct {
	// Target to execute request on
	Target *RequestTargetId `protobuf:"bytes,1,req,name=target" json:"target,omitempty"`
	// Collection of action events to audit
	Action               []*ActionEventDTO `protobuf:"bytes,2,rep,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionAuditRequest) Reset()         { *m = ActionAuditRequest{} }
func (m *ActionAuditRequest) String() string { return proto.CompactTextString(m) }
func (*ActionAuditRequest) ProtoMessage()    {}
func (*ActionAuditRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{20}
}

func (m *ActionAuditRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionAuditRequest.Unmarshal(m, b)
}
func (m *ActionAuditRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionAuditRequest.Marshal(b, m, deterministic)
}
func (m *ActionAuditRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionAuditRequest.Merge(m, src)
}
func (m *ActionAuditRequest) XXX_Size() int {
	return xxx_messageInfo_ActionAuditRequest.Size(m)
}
func (m *ActionAuditRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionAuditRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionAuditRequest proto.InternalMessageInfo

func (m *ActionAuditRequest) GetTarget() *RequestTargetId {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *ActionAuditRequest) GetAction() []*ActionEventDTO {
	if m != nil {
		return m.Action
	}
	return nil
}

// The ProbeInfo class provides a description of the probe that enables users to
// attach Operations Manager to a target, and enables the probe to add entities to the
// Operations Manager market as valid members of the supply chain.
//
// To enable users to use this probe, the ProbeInfo includes a probe type and
// the set of fields a user must give to provide credentials and other data necessary to
// attach to a target. The probe type is an arbitrary string, but REST API calls that
// invoke this probe must refer to it by the same type.
//
// To enable adding entities to the Operations Manager market, the ProbeInfo includes a
// set of {@link TemplateDTO} objects called the supplyChainDefinitionSet.
// Each template object describes an entity type that
// the probe can discover and add to the market. This description includes an EntityDTO object
// and its corresponding lists of bought and sold {@code CommodityDTO} objects. As the probe
// discovers entities, it must create instances that map to members of the supplyChainDefinitionSet.
type ProbeInfo struct {
	// probeType is a string identifier to define the type of the probe. You specify the value for this string in the
	// {@code probe-conf.xml} file for your probe. Note that for a given instance of Operations Manager,
	// every probe communicating with the server must have a unique type.
	//
	// The probe you create must include a type
	// to display in the user interface. The string you provide for the probe type appears
	// in the Target Configuration form as one of the choices for the category that you set for the probe.
	//
	// For example, in the standard targets, Hypervisor is a category. If your probe
	// category is also {@code Hypervisor} and you specify a type of 'MyProbe', then MyProbe
	// will appear in the user interface as an additional Hypervisor choice.
	// On the other hand, if the category you provide does not match one of the standard categories,
	// MyProbe will appear as a choice in the CUSTOM category.
	ProbeType *string `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	// String identifier to define the category of the probe. You specify the value for this string in the
	// 'probe-conf.xml' file for your probe.
	//
	// The probe you create must include a category.
	// If the category you provide matches one of the standard categories, then your probe will appear
	// as a choice in the Target Configuration form alongside the other members of that category.
	// For example, in the standard targets, 'Hypervisor' is a category. If your probe
	// category is also 'Hypervisor' and you specify a type of 'MyProbe', then MyProbe
	// will appear in the user interface as an additional 'Hypervisor' choice.
	// On the other hand, if the category you provide does not match one of the standard categories,
	// MyProbe will appear as a choice in the 'CUSTOM' category.
	//
	// The set of standard categories is defined in the 'ProbeCategory' enumeration.
	ProbeCategory *string `protobuf:"bytes,2,req,name=probeCategory" json:"probeCategory,omitempty"`
	// Set of TemplateDTO objects that defines the types of entities the probe discovers, and
	// what their bought and sold commodities are. Any entity instances the probe creates must match
	// members of this set.
	SupplyChainDefinitionSet []*TemplateDTO `protobuf:"bytes,3,rep,name=supplyChainDefinitionSet" json:"supplyChainDefinitionSet,omitempty"`
	// List of AccountDefEntry objects that describe the fields users provide as
	// input (i.e. ip, user, pass, ...). These fields appear in the Operations Manager user interface
	// when users add targets of this probe's type. REST API calls to add targets also provide data
	// for these fields (i.e. ip, user, password, ...).
	//
	// Order of elements in the list specifyes the order they appear in the UI.
	// List must not contain entries with equal "name" field. This is up to client to ensure this.
	AccountDefinition []*AccountDefEntry `protobuf:"bytes,4,rep,name=accountDefinition" json:"accountDefinition,omitempty"`
	// The field name, that should be treated as target identifier. There must be at least 1 value
	TargetIdentifierField []string `protobuf:"bytes,5,rep,name=targetIdentifierField" json:"targetIdentifierField,omitempty"`
	// Specifies the interval at which discoveries will be executed for this probe.
	// The value is specified in seconds. If no value is provided for rediscoveryIntervalSeconds
	// a default of 600 seconds (10 minutes) will be used. The minimum value allowed for this
	// field is 60 seconds (1 minute).
	FullRediscoveryIntervalSeconds *int32 `protobuf:"varint,6,opt,name=fullRediscoveryIntervalSeconds" json:"fullRediscoveryIntervalSeconds,omitempty"`
	// EntityIdentityMetadata supplies meta information describing the properties used to identify
	// all of the entities that a probe may discover. There should be one EntityIdentityMetadata
	// for each type of entity that a probe may discover.
	EntityMetadata []*EntityIdentityMetadata `protobuf:"bytes,7,rep,name=entityMetadata" json:"entityMetadata,omitempty"`
	// Action policy provides data about entity types and actions that can be applied to them
	ActionPolicy []*ActionPolicyDTO `protobuf:"bytes,8,rep,name=actionPolicy" json:"actionPolicy,omitempty"`
	// Indicates whether the probe discovers ServiceEntities and thus has a SupplyChain and
	// identity meta data.
	DiscoversSupplyChain *bool `protobuf:"varint,9,opt,name=discoversSupplyChain,def=1" json:"discoversSupplyChain,omitempty"`
	// Specifies the interval at which incremental discoveries will be executed for this probe.
	// The value is specified in seconds. If no value is provided for incrementalRediscoveryIntervalSeconds
	// a default of -1 will be used, which means the probe doesn't support incremental discovery
	IncrementalRediscoveryIntervalSeconds *int32 `protobuf:"varint,10,opt,name=incrementalRediscoveryIntervalSeconds" json:"incrementalRediscoveryIntervalSeconds,omitempty"`
	// Specifies the interval at which performance discoveries will be executed for this probe.
	// The value is specified in seconds. If no value is provided for performanceRediscoveryIntervalSeconds
	// a default of -1 will be used, which means the probe doesn't support performance discovery
	PerformanceRediscoveryIntervalSeconds *int32 `protobuf:"varint,11,opt,name=performanceRediscoveryIntervalSeconds" json:"performanceRediscoveryIntervalSeconds,omitempty"`
	// If action approval is supported by the probe, this field will hold parameters for the feature
	ActionApproval *ActionApprovalFeature `protobuf:"bytes,12,opt,name=actionApproval" json:"actionApproval,omitempty"`
	// If action audit is supported by the probe, this field will hold parameters for the feature
	ActionAudit          *ActionAuditFeature `protobuf:"bytes,13,opt,name=actionAudit" json:"actionAudit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProbeInfo) Reset()         { *m = ProbeInfo{} }
func (m *ProbeInfo) String() string { return proto.CompactTextString(m) }
func (*ProbeInfo) ProtoMessage()    {}
func (*ProbeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{21}
}

func (m *ProbeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProbeInfo.Unmarshal(m, b)
}
func (m *ProbeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProbeInfo.Marshal(b, m, deterministic)
}
func (m *ProbeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProbeInfo.Merge(m, src)
}
func (m *ProbeInfo) XXX_Size() int {
	return xxx_messageInfo_ProbeInfo.Size(m)
}
func (m *ProbeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProbeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProbeInfo proto.InternalMessageInfo

const Default_ProbeInfo_DiscoversSupplyChain bool = true

func (m *ProbeInfo) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *ProbeInfo) GetProbeCategory() string {
	if m != nil && m.ProbeCategory != nil {
		return *m.ProbeCategory
	}
	return ""
}

func (m *ProbeInfo) GetSupplyChainDefinitionSet() []*TemplateDTO {
	if m != nil {
		return m.SupplyChainDefinitionSet
	}
	return nil
}

func (m *ProbeInfo) GetAccountDefinition() []*AccountDefEntry {
	if m != nil {
		return m.AccountDefinition
	}
	return nil
}

func (m *ProbeInfo) GetTargetIdentifierField() []string {
	if m != nil {
		return m.TargetIdentifierField
	}
	return nil
}

func (m *ProbeInfo) GetFullRediscoveryIntervalSeconds() int32 {
	if m != nil && m.FullRediscoveryIntervalSeconds != nil {
		return *m.FullRediscoveryIntervalSeconds
	}
	return 0
}

func (m *ProbeInfo) GetEntityMetadata() []*EntityIdentityMetadata {
	if m != nil {
		return m.EntityMetadata
	}
	return nil
}

func (m *ProbeInfo) GetActionPolicy() []*ActionPolicyDTO {
	if m != nil {
		return m.ActionPolicy
	}
	return nil
}

func (m *ProbeInfo) GetDiscoversSupplyChain() bool {
	if m != nil && m.DiscoversSupplyChain != nil {
		return *m.DiscoversSupplyChain
	}
	return Default_ProbeInfo_DiscoversSupplyChain
}

func (m *ProbeInfo) GetIncrementalRediscoveryIntervalSeconds() int32 {
	if m != nil && m.IncrementalRediscoveryIntervalSeconds != nil {
		return *m.IncrementalRediscoveryIntervalSeconds
	}
	return 0
}

func (m *ProbeInfo) GetPerformanceRediscoveryIntervalSeconds() int32 {
	if m != nil && m.PerformanceRediscoveryIntervalSeconds != nil {
		return *m.PerformanceRediscoveryIntervalSeconds
	}
	return 0
}

func (m *ProbeInfo) GetActionApproval() *ActionApprovalFeature {
	if m != nil {
		return m.ActionApproval
	}
	return nil
}

func (m *ProbeInfo) GetActionAudit() *ActionAuditFeature {
	if m != nil {
		return m.ActionAudit
	}
	return nil
}

// Action approval feature parameters.
type ActionApprovalFeature struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionApprovalFeature) Reset()         { *m = ActionApprovalFeature{} }
func (m *ActionApprovalFeature) String() string { return proto.CompactTextString(m) }
func (*ActionApprovalFeature) ProtoMessage()    {}
func (*ActionApprovalFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{22}
}

func (m *ActionApprovalFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionApprovalFeature.Unmarshal(m, b)
}
func (m *ActionApprovalFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionApprovalFeature.Marshal(b, m, deterministic)
}
func (m *ActionApprovalFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionApprovalFeature.Merge(m, src)
}
func (m *ActionApprovalFeature) XXX_Size() int {
	return xxx_messageInfo_ActionApprovalFeature.Size(m)
}
func (m *ActionApprovalFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionApprovalFeature.DiscardUnknown(m)
}

var xxx_messageInfo_ActionApprovalFeature proto.InternalMessageInfo

// Action audit feature parameters.
type ActionAuditFeature struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionAuditFeature) Reset()         { *m = ActionAuditFeature{} }
func (m *ActionAuditFeature) String() string { return proto.CompactTextString(m) }
func (*ActionAuditFeature) ProtoMessage()    {}
func (*ActionAuditFeature) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{23}
}

func (m *ActionAuditFeature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionAuditFeature.Unmarshal(m, b)
}
func (m *ActionAuditFeature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionAuditFeature.Marshal(b, m, deterministic)
}
func (m *ActionAuditFeature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionAuditFeature.Merge(m, src)
}
func (m *ActionAuditFeature) XXX_Size() int {
	return xxx_messageInfo_ActionAuditFeature.Size(m)
}
func (m *ActionAuditFeature) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionAuditFeature.DiscardUnknown(m)
}

var xxx_messageInfo_ActionAuditFeature proto.InternalMessageInfo

// The {@code SetProperties} message sends a collection of properties to a target in the form
// of a map from string to string.
type SetProperties struct {
	Properties           map[string]string `protobuf:"bytes,4,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetProperties) Reset()         { *m = SetProperties{} }
func (m *SetProperties) String() string { return proto.CompactTextString(m) }
func (*SetProperties) ProtoMessage()    {}
func (*SetProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f4aaac5b7541132, []int{24}
}

func (m *SetProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetProperties.Unmarshal(m, b)
}
func (m *SetProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetProperties.Marshal(b, m, deterministic)
}
func (m *SetProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetProperties.Merge(m, src)
}
func (m *SetProperties) XXX_Size() int {
	return xxx_messageInfo_SetProperties.Size(m)
}
func (m *SetProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_SetProperties.DiscardUnknown(m)
}

var xxx_messageInfo_SetProperties proto.InternalMessageInfo

func (m *SetProperties) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func init() {
	proto.RegisterType((*MediationClientMessage)(nil), "common_dto.MediationClientMessage")
	proto.RegisterType((*MediationServerMessage)(nil), "common_dto.MediationServerMessage")
	proto.RegisterType((*RequestTargetId)(nil), "common_dto.RequestTargetId")
	proto.RegisterType((*ActionRequest)(nil), "common_dto.ActionRequest")
	proto.RegisterType((*ActionResult)(nil), "common_dto.ActionResult")
	proto.RegisterType((*ActionProgress)(nil), "common_dto.ActionProgress")
	proto.RegisterType((*ActionResponse)(nil), "common_dto.ActionResponse")
	proto.RegisterType((*TargetUpdateResponse)(nil), "common_dto.TargetUpdateResponse")
	proto.RegisterType((*ActionErrorsResponse)(nil), "common_dto.ActionErrorsResponse")
	proto.RegisterType((*GetActionStateResponse)(nil), "common_dto.GetActionStateResponse")
	proto.RegisterMapType((map[int64]ActionResponseState)(nil), "common_dto.GetActionStateResponse.ActionStateEntry")
	proto.RegisterType((*ContainerInfo)(nil), "common_dto.ContainerInfo")
	proto.RegisterType((*KeepAlive)(nil), "common_dto.KeepAlive")
	proto.RegisterType((*Ack)(nil), "common_dto.Ack")
	proto.RegisterType((*InitializationContent)(nil), "common_dto.InitializationContent")
	proto.RegisterType((*ValidationRequest)(nil), "common_dto.ValidationRequest")
	proto.RegisterType((*DiscoveryRequest)(nil), "common_dto.DiscoveryRequest")
	proto.RegisterType((*TargetUpdateRequest)(nil), "common_dto.TargetUpdateRequest")
	proto.RegisterType((*ActionApprovalRequest)(nil), "common_dto.ActionApprovalRequest")
	proto.RegisterType((*ActionUpdateStateRequest)(nil), "common_dto.ActionUpdateStateRequest")
	proto.RegisterType((*GetActionStateRequest)(nil), "common_dto.GetActionStateRequest")
	proto.RegisterType((*ActionAuditRequest)(nil), "common_dto.ActionAuditRequest")
	proto.RegisterType((*ProbeInfo)(nil), "common_dto.ProbeInfo")
	proto.RegisterType((*ActionApprovalFeature)(nil), "common_dto.ActionApprovalFeature")
	proto.RegisterType((*ActionAuditFeature)(nil), "common_dto.ActionAuditFeature")
	proto.RegisterType((*SetProperties)(nil), "common_dto.SetProperties")
	proto.RegisterMapType((map[string]string)(nil), "common_dto.SetProperties.PropertiesEntry")
}

func init() { proto.RegisterFile("MediationMessage.proto", fileDescriptor_0f4aaac5b7541132) }

var fileDescriptor_0f4aaac5b7541132 = []byte{
	// 1515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x16, 0xa5, 0x48, 0xb1, 0xc6, 0x91, 0x0f, 0x6b, 0xc9, 0x61, 0x94, 0x93, 0x42, 0xe4, 0x07,
	0xfc, 0x5f, 0x54, 0x08, 0x92, 0x26, 0x08, 0xd2, 0xb4, 0xa9, 0x6c, 0xd9, 0x95, 0x12, 0x38, 0x76,
	0x57, 0x8e, 0xd1, 0x8b, 0x00, 0x06, 0x43, 0xad, 0x5d, 0xd6, 0x14, 0xc9, 0x2e, 0x57, 0x42, 0x54,
	0xa0, 0x77, 0xb9, 0x2b, 0xfa, 0x00, 0x05, 0xfa, 0x00, 0xed, 0xd3, 0xf4, 0x49, 0xfa, 0x06, 0xbd,
	0x28, 0x76, 0x79, 0x5a, 0x8a, 0x2b, 0xdb, 0x35, 0xe0, 0x3b, 0x69, 0xf7, 0x9b, 0x6f, 0x87, 0xc3,
	0xf9, 0x66, 0x66, 0x09, 0xeb, 0xbb, 0x64, 0x68, 0x9b, 0xcc, 0xf6, 0xdc, 0x5d, 0x12, 0x04, 0xe6,
	0x09, 0x69, 0xfb, 0xd4, 0x63, 0x1e, 0x02, 0xcb, 0x1b, 0x8d, 0x3c, 0xf7, 0x68, 0xc8, 0xbc, 0x66,
	0xa3, 0x63, 0x71, 0xc0, 0xf6, 0x47, 0x62, 0x8d, 0xf9, 0x8f, 0x10, 0xd2, 0x5c, 0xde, 0x12, 0x90,
	0xee, 0xc1, 0x5e, 0xbc, 0xd0, 0xb5, 0x03, 0xcb, 0x9b, 0x10, 0x3a, 0x8d, 0x16, 0x56, 0x07, 0x63,
	0xdf, 0x77, 0xa6, 0x5b, 0xdf, 0x9b, 0x76, 0x6c, 0xb4, 0xde, 0x1f, 0x12, 0x97, 0xd9, 0x6c, 0xba,
	0x4b, 0x98, 0x39, 0x34, 0x99, 0x19, 0xae, 0x1b, 0xbf, 0x57, 0x24, 0x57, 0xb6, 0x1c, 0x9b, 0xb8,
	0x2c, 0x72, 0x08, 0xed, 0x03, 0x9a, 0x98, 0x8e, 0x3d, 0x14, 0x5b, 0x98, 0x04, 0xbe, 0xe7, 0x06,
	0x44, 0x2f, 0xb6, 0xb4, 0x8d, 0xc5, 0xc7, 0xf7, 0xda, 0xa9, 0x9f, 0xed, 0xc3, 0x1c, 0xaa, 0x57,
	0xc0, 0x0a, 0x5b, 0xb4, 0x0b, 0xab, 0xc3, 0xd8, 0xd5, 0x84, 0xb0, 0x24, 0x08, 0xef, 0xca, 0x84,
	0xdd, 0x59, 0x50, 0xaf, 0x80, 0xf3, 0x96, 0xe8, 0x29, 0x54, 0x4f, 0x09, 0xf1, 0x3b, 0x8e, 0x3d,
	0x21, 0xfa, 0x35, 0x41, 0xd3, 0x90, 0x69, 0xde, 0xc4, 0x9b, 0xbd, 0x02, 0x4e, 0x91, 0xa8, 0x0b,
	0x4b, 0xa6, 0x08, 0xec, 0x3e, 0xf5, 0x4e, 0x28, 0x09, 0x02, 0xbd, 0x2c, 0x6c, 0x9b, 0xb2, 0x6d,
	0x27, 0x83, 0xe8, 0x15, 0xf0, 0x8c, 0x0d, 0xda, 0x8c, 0x59, 0x92, 0x07, 0xa9, 0x08, 0x16, 0x3d,
	0xcf, 0x82, 0x49, 0x30, 0x76, 0x58, 0xca, 0x91, 0x3c, 0xc0, 0x21, 0xd4, 0x99, 0x49, 0x4f, 0x08,
	0x7b, 0xe7, 0x0f, 0x4d, 0x46, 0x12, 0xa6, 0xeb, 0x82, 0xa9, 0x25, 0x33, 0x1d, 0x28, 0x70, 0xbd,
	0x02, 0x56, 0xda, 0x73, 0xde, 0xf0, 0xa4, 0x6d, 0x4a, 0x3d, 0x1a, 0x24, 0xbc, 0x0b, 0x79, 0xde,
	0x8e, 0x02, 0xc7, 0x79, 0x55, 0xf6, 0xe8, 0xbb, 0x98, 0x77, 0xc0, 0x4c, 0x46, 0x52, 0xde, 0xaa,
	0xe0, 0x35, 0x64, 0xde, 0x6f, 0x08, 0xeb, 0xa4, 0xd0, 0x3c, 0x73, 0x96, 0x01, 0xbd, 0x87, 0xf5,
	0x70, 0xbd, 0xe3, 0xfb, 0xd4, 0x9b, 0x98, 0x4e, 0xc2, 0x0d, 0x79, 0xee, 0x8e, 0x12, 0xd9, 0x2b,
	0xe0, 0x39, 0x1c, 0xe8, 0x0e, 0x54, 0x47, 0x61, 0x52, 0xf7, 0xbb, 0xfa, 0x72, 0x4b, 0xdb, 0x28,
	0xe3, 0x74, 0x61, 0xb3, 0x09, 0xfa, 0x28, 0x56, 0xc0, 0x91, 0x25, 0x24, 0x70, 0x14, 0xed, 0x1a,
	0x7f, 0xc8, 0xf2, 0x18, 0x10, 0x3a, 0x21, 0x34, 0x96, 0xc7, 0x2e, 0xac, 0xca, 0x29, 0xfe, 0xe3,
	0x98, 0x04, 0x2c, 0x52, 0xc7, 0xdd, 0x79, 0xea, 0x10, 0x20, 0x9e, 0xcc, 0x39, 0x4b, 0xf4, 0x1a,
	0x56, 0xa4, 0x0c, 0x0f, 0xd9, 0x42, 0x69, 0xdc, 0x99, 0x23, 0x8d, 0x98, 0x2c, 0x67, 0x87, 0x3a,
	0x50, 0x8b, 0x33, 0x2d, 0x24, 0x0a, 0xc5, 0x71, 0x4b, 0x95, 0x9a, 0x31, 0x4b, 0xd6, 0x02, 0x3d,
	0x02, 0x64, 0xbb, 0x8c, 0x50, 0x3a, 0xf6, 0xd9, 0x9e, 0x4f, 0xa8, 0xf0, 0x55, 0x08, 0xa5, 0xcc,
	0xc5, 0x9d, 0xdf, 0x43, 0x5f, 0x00, 0xf8, 0xd4, 0xf3, 0x09, 0x65, 0x36, 0x09, 0x22, 0x31, 0x64,
	0x4e, 0x1c, 0x10, 0xb6, 0x9f, 0x00, 0x7a, 0x05, 0x2c, 0xc1, 0xd1, 0x00, 0xd6, 0xb2, 0x99, 0x1c,
	0xfa, 0x1d, 0x0a, 0xe1, 0xfe, 0x7c, 0x21, 0xc4, 0xde, 0xab, 0xac, 0xd1, 0x9b, 0x58, 0xa2, 0x71,
	0x42, 0x44, 0x02, 0x78, 0x70, 0x56, 0x32, 0xc5, 0x8c, 0x33, 0xa6, 0xe8, 0x00, 0x56, 0xc3, 0x95,
	0xf0, 0x0c, 0x91, 0xbf, 0x51, 0xe2, 0x3f, 0xcc, 0xf3, 0x49, 0x20, 0xe9, 0xad, 0xe7, 0x08, 0xb8,
	0x8b, 0x27, 0x19, 0xa5, 0x44, 0xf9, 0xfe, 0xe0, 0x2c, 0x2d, 0x25, 0x2e, 0x66, 0x4d, 0xd1, 0x26,
	0x2c, 0x46, 0x4e, 0x8f, 0x87, 0x36, 0xd3, 0x17, 0xf3, 0x95, 0xba, 0x93, 0x6e, 0xa7, 0x34, 0xb2,
	0xd1, 0x7f, 0x91, 0x4a, 0x20, 0xe4, 0x90, 0x48, 0x65, 0x04, 0xcb, 0x11, 0x67, 0xf8, 0x8a, 0xfa,
	0x43, 0x4e, 0xe6, 0x53, 0xef, 0x03, 0x39, 0x98, 0xfa, 0x44, 0xd7, 0x5a, 0xc5, 0x8d, 0x2a, 0x4e,
	0x17, 0xd0, 0x4b, 0xb8, 0x61, 0x5a, 0x96, 0x37, 0x76, 0xd9, 0xa1, 0xe9, 0x8c, 0x79, 0x67, 0x29,
	0xe5, 0xeb, 0x67, 0xba, 0x8f, 0x33, 0x68, 0xe3, 0x97, 0x22, 0xd4, 0x32, 0x39, 0x7c, 0x95, 0xa7,
	0xa1, 0xb7, 0x80, 0xcc, 0x6c, 0x33, 0xee, 0x1e, 0xec, 0xe9, 0xa5, 0x56, 0x51, 0x1d, 0x61, 0x19,
	0x85, 0x15, 0x96, 0xe8, 0x2d, 0x34, 0x02, 0x62, 0x79, 0xee, 0xd0, 0xa4, 0x53, 0xf9, 0x58, 0xfd,
	0xda, 0x39, 0x6e, 0xa9, 0xcd, 0x8c, 0x1d, 0xb8, 0x21, 0xf7, 0x1a, 0xf4, 0x0c, 0x16, 0x68, 0x5c,
	0x41, 0x35, 0xe1, 0x65, 0x53, 0xd9, 0x97, 0x04, 0x02, 0x27, 0x58, 0xa3, 0x07, 0x4b, 0xd9, 0xce,
	0x77, 0x69, 0xa6, 0xbf, 0xb4, 0x98, 0x2a, 0x29, 0xc3, 0xdf, 0xc2, 0x5a, 0xb6, 0x01, 0x86, 0x19,
	0xcf, 0x59, 0x97, 0xb2, 0x22, 0xef, 0xe4, 0x61, 0x58, 0x65, 0x8b, 0x9a, 0xb0, 0xe0, 0xc7, 0x5d,
	0xbc, 0xd8, 0x2a, 0x6e, 0x94, 0x71, 0xf2, 0x1f, 0x3d, 0x82, 0xb5, 0xd8, 0x9b, 0x2e, 0x09, 0x2c,
	0x6a, 0xfb, 0xa2, 0x86, 0x95, 0x44, 0x66, 0xa8, 0xb6, 0x78, 0x06, 0x85, 0x87, 0xec, 0xd9, 0x43,
	0x51, 0x33, 0x4b, 0x38, 0x5d, 0x30, 0x7a, 0x50, 0x57, 0x75, 0x61, 0xf4, 0x08, 0x16, 0x08, 0xef,
	0x93, 0x3c, 0x23, 0x34, 0xf1, 0xfa, 0xea, 0xf2, 0xb3, 0x6c, 0x47, 0x7b, 0x38, 0x41, 0x19, 0xaf,
	0xa1, 0xae, 0xea, 0xbb, 0xe8, 0x31, 0x54, 0x04, 0x26, 0x88, 0x78, 0x9a, 0x73, 0x3a, 0x35, 0x67,
	0x8b, 0x90, 0xc6, 0xa7, 0x22, 0xac, 0xab, 0x9b, 0x2d, 0x7a, 0x17, 0xd7, 0x83, 0x38, 0xce, 0x9c,
	0xf3, 0xc9, 0xf9, 0x5d, 0xba, 0x2d, 0xad, 0x6d, 0xbb, 0x8c, 0x4e, 0xb1, 0xcc, 0x23, 0x79, 0x59,
	0xbc, 0xa8, 0x97, 0xcd, 0x23, 0x58, 0x99, 0x25, 0x45, 0x2b, 0x50, 0x3a, 0x25, 0x53, 0x5d, 0x13,
	0x71, 0xe6, 0x3f, 0xd1, 0x53, 0x28, 0x4f, 0x22, 0x71, 0x6a, 0x17, 0x49, 0x89, 0x10, 0xfd, 0xa2,
	0xf8, 0x5c, 0x33, 0xbe, 0x82, 0xda, 0x96, 0xe7, 0x32, 0xd3, 0x76, 0x09, 0xed, 0xbb, 0xc7, 0x1e,
	0xfa, 0x0c, 0x2a, 0x42, 0xfc, 0x71, 0x2c, 0x33, 0x93, 0xe1, 0x3e, 0xdf, 0xe1, 0x30, 0x1c, 0x81,
	0x8c, 0x45, 0xa8, 0x26, 0xe3, 0xa2, 0x51, 0x86, 0x52, 0xc7, 0x3a, 0x35, 0xde, 0x43, 0xa3, 0xef,
	0xda, 0xcc, 0x36, 0x1d, 0xfb, 0xa7, 0x70, 0x3e, 0xf6, 0x5c, 0x46, 0x5c, 0x86, 0xb6, 0x60, 0x59,
	0x98, 0xa5, 0xed, 0x2c, 0x92, 0xc6, 0xfc, 0x7e, 0x87, 0x67, 0x2d, 0x0c, 0x0f, 0x56, 0x73, 0xa3,
	0xc1, 0x95, 0x56, 0xcc, 0x7f, 0x34, 0x58, 0x99, 0x1d, 0x1f, 0xae, 0xb4, 0x68, 0xbe, 0x82, 0x5a,
	0x32, 0x9a, 0x08, 0xfe, 0x92, 0x50, 0xfa, 0x2d, 0xe5, 0x3c, 0xc3, 0x01, 0x38, 0x8b, 0x47, 0x6f,
	0xa4, 0x99, 0x48, 0xc4, 0xfe, 0x63, 0x3c, 0xca, 0xdc, 0x57, 0x72, 0x44, 0x18, 0x9e, 0x78, 0x39,
	0x43, 0xe3, 0x4f, 0x0d, 0xd6, 0x14, 0xc3, 0xc3, 0x95, 0x46, 0xe0, 0x19, 0xc0, 0x58, 0x1c, 0x26,
	0x3d, 0xfe, 0xba, 0x6c, 0xfb, 0x2e, 0xd9, 0xc5, 0x12, 0xd2, 0xf8, 0xa4, 0x41, 0x43, 0x39, 0x98,
	0xa0, 0x27, 0x50, 0x09, 0x47, 0x9d, 0x28, 0xe3, 0x6e, 0xcb, 0x6c, 0x33, 0xfd, 0x17, 0x47, 0x50,
	0xf4, 0x0c, 0x2a, 0xa1, 0x80, 0x23, 0xf7, 0xcf, 0xeb, 0x58, 0x11, 0xda, 0xf8, 0x55, 0x03, 0x7d,
	0xde, 0x3c, 0x73, 0x39, 0x4f, 0x5e, 0x66, 0x4b, 0xd2, 0xdc, 0x02, 0x92, 0x34, 0x14, 0x19, 0x6e,
	0xfc, 0x00, 0x0d, 0xe5, 0x2c, 0x74, 0x39, 0x5f, 0x32, 0xd5, 0x9e, 0x7b, 0x92, 0xa9, 0xf6, 0x3f,
	0x03, 0xca, 0x4f, 0x4b, 0x97, 0x3b, 0xe8, 0xf1, 0x4c, 0xf8, 0x55, 0x05, 0x73, 0x42, 0x5c, 0x26,
	0x87, 0xfe, 0xef, 0x0a, 0x54, 0x93, 0x2a, 0x75, 0x4e, 0x8e, 0x3e, 0x84, 0x9a, 0xf8, 0xb3, 0x65,
	0x32, 0x72, 0xe2, 0xd1, 0xa9, 0xe8, 0x84, 0x55, 0x9c, 0x5d, 0x44, 0x03, 0xd0, 0x83, 0xf4, 0xb3,
	0x40, 0x97, 0x1c, 0xdb, 0xbc, 0xb6, 0xf1, 0x5b, 0x0d, 0xbf, 0x68, 0x70, 0xbf, 0x6e, 0x66, 0xe6,
	0x6c, 0x32, 0xf2, 0x1d, 0x93, 0x11, 0xee, 0xd4, 0x5c, 0x43, 0xd4, 0xe7, 0x53, 0xb1, 0x48, 0xf8,
	0x74, 0x3d, 0x9a, 0x61, 0x6e, 0x2b, 0x34, 0xd2, 0x25, 0xc7, 0x61, 0x43, 0xc9, 0x5b, 0xa1, 0xcf,
	0xa1, 0xc1, 0xa2, 0xc8, 0x11, 0x97, 0xd9, 0xc7, 0x36, 0xa1, 0x3b, 0x36, 0x71, 0x86, 0x7a, 0xb9,
	0x55, 0xda, 0xa8, 0x62, 0xf5, 0x26, 0xda, 0x81, 0x7b, 0xc7, 0x63, 0xc7, 0xc1, 0x24, 0xd1, 0x7b,
	0x9f, 0x5f, 0x4d, 0x26, 0xa6, 0x33, 0x10, 0x83, 0x52, 0x78, 0x13, 0x29, 0xe3, 0x73, 0x50, 0xe8,
	0x35, 0x2c, 0x65, 0xbf, 0x8f, 0xe8, 0xd7, 0xc5, 0x53, 0x64, 0x2e, 0x9e, 0xdb, 0x02, 0x31, 0xfb,
	0x25, 0x05, 0xcf, 0x58, 0xa2, 0x57, 0xbc, 0x66, 0x88, 0x21, 0xca, 0x73, 0x6c, 0x6b, 0xaa, 0x2f,
	0xa8, 0xe2, 0x91, 0xee, 0xf3, 0x08, 0x67, 0x0c, 0xd0, 0x73, 0xa8, 0xc7, 0x8e, 0x06, 0xd2, 0xa7,
	0x1c, 0x71, 0xdd, 0x58, 0x78, 0x71, 0x8d, 0xd1, 0x31, 0xc1, 0x4a, 0x04, 0x3a, 0x80, 0xff, 0xd9,
	0xae, 0x45, 0xc9, 0x88, 0xb8, 0xcc, 0x3c, 0x2b, 0x2a, 0x20, 0xa2, 0x72, 0x31, 0x30, 0x67, 0xf5,
	0x09, 0x3d, 0xf6, 0xe8, 0xc8, 0x74, 0x2d, 0x72, 0x06, 0xeb, 0x62, 0xc8, 0x7a, 0x21, 0x30, 0xea,
	0xe7, 0xae, 0x67, 0x37, 0xce, 0xbb, 0x9e, 0xed, 0x10, 0x93, 0x8d, 0x29, 0xc9, 0x5d, 0xce, 0xbe,
	0xce, 0xde, 0x7c, 0x6a, 0x67, 0xde, 0x7c, 0x62, 0x12, 0xd9, 0xc4, 0xb8, 0x39, 0x5b, 0x70, 0x23,
	0x94, 0x51, 0xcf, 0xd4, 0x81, 0x78, 0xf5, 0x37, 0x0d, 0x6a, 0x99, 0xfe, 0x8e, 0xfa, 0x99, 0xeb,
	0x6f, 0x28, 0x81, 0xff, 0xcf, 0x1d, 0x07, 0xda, 0xe9, 0xcf, 0x50, 0x10, 0x92, 0x71, 0xf3, 0x4b,
	0x58, 0x9e, 0xd9, 0x96, 0x67, 0xa5, 0x6a, 0x38, 0x2b, 0xd5, 0xe5, 0x59, 0xa9, 0x2a, 0x8d, 0x42,
	0x9b, 0x4f, 0xe0, 0xbe, 0xe5, 0x8d, 0xda, 0x93, 0x11, 0x1b, 0xd3, 0x0f, 0x5e, 0x9b, 0xab, 0x98,
	0xbf, 0x8d, 0x76, 0x30, 0x3c, 0x8d, 0xfc, 0xd9, 0x5c, 0x99, 0xfd, 0xfa, 0xf8, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xdf, 0x8e, 0x9b, 0xdd, 0x90, 0x14, 0x00, 0x00,
}
